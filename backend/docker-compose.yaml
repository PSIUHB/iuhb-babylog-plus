services:
  api:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    image: babylogplus-api:latest
    container_name: babylogplus_api
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-babylog}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE:-babylogplus}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
    volumes:
      - ./data/uploads:/app/uploads
      - ./logs/api:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - babylogplus_network

  postgres:
    image: postgres:15-alpine
    container_name: babylogplus_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME:-babylog}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE:-babylogplus}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup/postgres:/backup
    networks:
      - babylogplus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-babylog} -d ${DB_DATABASE:-babylogplus}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: babylogplus_redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - babylogplus_network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  babylogplus_network:
    driver: bridge
